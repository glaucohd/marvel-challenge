// Mocks generated by Mockito 5.3.2 from annotations
// in marvel_challenge/test/src/app/features/marvel_hero/controllers/marvel_hero_controller_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:ui' as _i8;

import 'package:flutter/material.dart' as _i4;
import 'package:marvel_challenge/src/app/features/marvel_hero/controllers/marvel_hero_controller.dart'
    as _i5;
import 'package:marvel_challenge/src/app/features/marvel_hero/vo/hero_vo.dart'
    as _i3;
import 'package:marvel_challenge/src/domain/entities/data_entity.dart' as _i7;
import 'package:marvel_challenge/src/domain/usecases/get_characters_usecase.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGetCharactersUseCase_0 extends _i1.SmartFake
    implements _i2.GetCharactersUseCase {
  _FakeGetCharactersUseCase_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHeroVO_1 extends _i1.SmartFake implements _i3.HeroVO {
  _FakeHeroVO_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCharactersVO_2 extends _i1.SmartFake implements _i3.CharactersVO {
  _FakeCharactersVO_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTextEditingController_3 extends _i1.SmartFake
    implements _i4.TextEditingController {
  _FakeTextEditingController_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MarvelHeroController].
///
/// See the documentation for Mockito's code generation for more information.
class MockMarvelHeroController extends _i1.Mock
    implements _i5.MarvelHeroController {
  MockMarvelHeroController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetCharactersUseCase get getListCharacters => (super.noSuchMethod(
        Invocation.getter(#getListCharacters),
        returnValue: _FakeGetCharactersUseCase_0(
          this,
          Invocation.getter(#getListCharacters),
        ),
      ) as _i2.GetCharactersUseCase);
  @override
  _i3.HeroVO get heroVO => (super.noSuchMethod(
        Invocation.getter(#heroVO),
        returnValue: _FakeHeroVO_1(
          this,
          Invocation.getter(#heroVO),
        ),
      ) as _i3.HeroVO);
  @override
  set heroVO(_i3.HeroVO? _heroVO) => super.noSuchMethod(
        Invocation.setter(
          #heroVO,
          _heroVO,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.CharactersVO get detailHero => (super.noSuchMethod(
        Invocation.getter(#detailHero),
        returnValue: _FakeCharactersVO_2(
          this,
          Invocation.getter(#detailHero),
        ),
      ) as _i3.CharactersVO);
  @override
  set detailHero(_i3.CharactersVO? _detailHero) => super.noSuchMethod(
        Invocation.setter(
          #detailHero,
          _detailHero,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.TextEditingController get textController => (super.noSuchMethod(
        Invocation.getter(#textController),
        returnValue: _FakeTextEditingController_3(
          this,
          Invocation.getter(#textController),
        ),
      ) as _i4.TextEditingController);
  @override
  set textController(_i4.TextEditingController? _textController) =>
      super.noSuchMethod(
        Invocation.setter(
          #textController,
          _textController,
        ),
        returnValueForMissingStub: null,
      );
  @override
  int get totalPages => (super.noSuchMethod(
        Invocation.getter(#totalPages),
        returnValue: 0,
      ) as int);
  @override
  set totalPages(int? _totalPages) => super.noSuchMethod(
        Invocation.setter(
          #totalPages,
          _totalPages,
        ),
        returnValueForMissingStub: null,
      );
  @override
  int get groupSize => (super.noSuchMethod(
        Invocation.getter(#groupSize),
        returnValue: 0,
      ) as int);
  @override
  set groupSize(int? _groupSize) => super.noSuchMethod(
        Invocation.setter(
          #groupSize,
          _groupSize,
        ),
        returnValueForMissingStub: null,
      );
  @override
  int get itemsPerPage => (super.noSuchMethod(
        Invocation.getter(#itemsPerPage),
        returnValue: 0,
      ) as int);
  @override
  set itemsPerPage(int? _itemsPerPage) => super.noSuchMethod(
        Invocation.setter(
          #itemsPerPage,
          _itemsPerPage,
        ),
        returnValueForMissingStub: null,
      );
  @override
  int get currentPage => (super.noSuchMethod(
        Invocation.getter(#currentPage),
        returnValue: 0,
      ) as int);
  @override
  set currentPage(int? _currentPage) => super.noSuchMethod(
        Invocation.setter(
          #currentPage,
          _currentPage,
        ),
        returnValueForMissingStub: null,
      );
  @override
  int get groupStart => (super.noSuchMethod(
        Invocation.getter(#groupStart),
        returnValue: 0,
      ) as int);
  @override
  set groupStart(int? _groupStart) => super.noSuchMethod(
        Invocation.setter(
          #groupStart,
          _groupStart,
        ),
        returnValueForMissingStub: null,
      );
  @override
  int get groupEnd => (super.noSuchMethod(
        Invocation.getter(#groupEnd),
        returnValue: 0,
      ) as int);
  @override
  set groupEnd(int? _groupEnd) => super.noSuchMethod(
        Invocation.setter(
          #groupEnd,
          _groupEnd,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
      ) as bool);
  @override
  set isLoading(bool? _isLoading) => super.noSuchMethod(
        Invocation.setter(
          #isLoading,
          _isLoading,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i6.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i3.HeroVO dataEntityToVO({_i7.DataEntity? dataEntity}) =>
      (super.noSuchMethod(
        Invocation.method(
          #dataEntityToVO,
          [],
          {#dataEntity: dataEntity},
        ),
        returnValue: _FakeHeroVO_1(
          this,
          Invocation.method(
            #dataEntityToVO,
            [],
            {#dataEntity: dataEntity},
          ),
        ),
      ) as _i3.HeroVO);
  @override
  _i6.Future<void> getHeroByLetter() => (super.noSuchMethod(
        Invocation.method(
          #getHeroByLetter,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> getHeroByOffset({required int? numberPage}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getHeroByOffset,
          [],
          {#numberPage: numberPage},
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  void startBottonNavigator() => super.noSuchMethod(
        Invocation.method(
          #startBottonNavigator,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void navigateGotoDetailPage({
    required _i3.CharactersVO? hero,
    required _i4.BuildContext? context,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #navigateGotoDetailPage,
          [],
          {
            #hero: hero,
            #context: context,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  void increment() => super.noSuchMethod(
        Invocation.method(
          #increment,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void decrement() => super.noSuchMethod(
        Invocation.method(
          #decrement,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addListener(_i8.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i8.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
